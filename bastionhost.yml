---
# ansible-playbook -i inventory/bastionhost bastionhost.yml
#####
# Initial AWS deployment
#####
- hosts: localhost_bastionhost
  connection: local
  gather_facts: yes
  roles:
    - role: localhost.ssh_key_configure
    - role: aws.vpc
    - role: aws.vpc_facts
      filters:
        "tag:Organization": b_dev
    - role: aws.bastionhost
    - role: aws.routes
    - role: aws.securitygroups
    - role: aws.iam
    - role: aws.ec2
    - role: aws.ec2_facts
      filters:
        "tag:Organization": b_dev
    - role: localhost.bastion_ssh_config
      bastion_vars: "{{ bastion_public_dns_name }}"
    - role: localhost.aws_ssh_keys
    - role: ansible.groups_init


#####
# Initial raw configuration for bastionhost
#####
- hosts: bastionhost_public
  become: yes
  gather_facts: no
  user: ubuntu
  roles:
    - role: ubuntu.raw_install_python

#####
# Configure NAT instance
#####
- hosts: bastionhost_public
  become: yes
  remote_user: ubuntu
  gather_facts: yes
  roles:
    - role: instance.ssh_aws_public_key
    - role: bastionhost.nat_config

#####
# Initial raw configuration for ALL instances - demos the ability to access internal systems through the bastionhost
#####
- hosts: internal_system_private
  become: yes
  remote_user: ubuntu
  gather_facts: no
  roles:
    - role: ubuntu.raw_install_python

#####
# Configure NAT instance
#####
- hosts: internal_system_private
  become: yes
  remote_user: ubuntu
  gather_facts: yes
  roles:
    - role: instance.ssh_aws_public_key
    - role: instance.apache_install
