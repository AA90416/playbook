clear
mkdir .ansible
cd gits/personal/playbook
cd ansible-playbooks
vi ansible.cfg
git clone https://github.com/ansible/ansible.git
git checkout stable-2.2
zsh --version
git branch remote
git branch -r
cd ansible
git branch -v
git ls-remote --heads
git checkout -b stable-2.2
git branch -d stable-2.2
git checkout -b stable-2.2 refs/heads/stable-2.2
git checkout 24d7555d0b6a59ec360dcc39eafd4bcbd976a2f6
git status
git branch
git checkout devel
sudo pip install -e git+https://github.com/ansible/ansible.git@v2.2.0.0-0.1.rc1#egg=ansible --upgrade
ansible --version
cd ..
ansible-galaxy init -p ../ansible-roles/ aws.securitygroups2
mkdir ../ansible-roles/aws.securitygroups2/filter_plugins
vi ../ansible-roles/aws.securitygroups2/filter_plugins/rules.py
which ansible
ansible-galaxy init -p ../ansible-roles instance.docker_install
ansible-playbook wordpress.yml
ssh -i ~/.ssh/id_rsa ubuntu@ec2-54-166-219-68.compute-1.amazonaws.com
ansible-galaxy init -p ../ansible-roles instance.automated_updates
ssh -i ~/.ssh/b_dev_demo ubuntu@ec2-54-166-219-68.compute-1.amazonaws.com
history
ansible-galaxy init -p ../ansible-roles instance.ssh_hostname
ansible-galaxy init -p ../ansible-roles instance.hosts
ansible-playbook wordpress.yml -e "env=b_aws"
ansible-galaxy init -p ../ansible-roles instance.openvpn_configure
cd ../ansible-container
virtualenv
sudo apt-get install virtualenv
which virtualenv
which blargh
echo $?
whoami
virtualenv --no-site-packages testenv
./testenv/bin/activate
ls -alh ./testenv/bin
source ./testenv/bin/activate
pip list
which python
rm -rf testenv
deactivate
cat environment.sh
virtualenv --no-site-packages env
vi environment.sh
./environment.sh
sudo apt-get install gcc
rm -rf env
virtualenv develop
source ./develop/bin/activate
pip install cryptography
df -h
vi aws-run.sh
vi ~/.ansible/vault_b_dev_demo
ls
ls -alh
pwd
exit
