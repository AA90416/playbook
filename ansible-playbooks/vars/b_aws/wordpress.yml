---
# Wordpress and mysql instances.
# AWS instance settings. Note that they are list of dictionaries.
ec2:
  - assign_public_ip: yes
    count_tag:
      Name: wordpress1
    exact_count: 1
    groups:
      - ssh_inbound
      - wordpress1_inbound
    instance_profile_name: wordpress1_role
    instance_tags:
      Name: wordpress1
      Organization: b_aws
      Environment: aws
      Role: wordpress
    instance_type: t2.nano
    keypair: defaultkey
    private_ip: "{{ cidr }}.0.11"
    subnet: b_aws_public
    wait: yes
  - assign_public_ip: yes
    count_tag:
      Name: mysql1
    exact_count: 1
    groups:
      - ssh_inbound
      - mysql1_inbound
    instance_profile_name: mysql1_role
    instance_tags:
      Name: mysql1
      Organization: b_aws
      Environment: aws
      Role: mysql
    instance_type: t2.nano
    keypair: defaultkey 
    private_ip: "{{ cidr }}.0.12"
    subnet: b_aws_public
    wait: yes
# iam role
iam:
  - iam_type: role
    name: wordpress1_role
    state: present
  - iam_type: role
    name: mysql1_role
    state: present
securitygroups:
  - name: ssh_inbound
    description: 'ssh inbound rules'
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ vault.ip_address }}/32"
    tags:
      Name: "ssh_inbound"
      Organization: b_aws
      Environment: aws
  - name: wordpress1_inbound
    description: 'wordpress inbound rules'
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: "{{ vault.ip_address }}/32"
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: "{{ vault.ip_address }}/32"
    tags:
      Name: "wordpress1_inbound"
      Organization: b_aws
      Environment: aws
  - name: mysql1_inbound
    description: 'mysql inbound rules'
    rules:
      - proto: tcp
        from_port: 3306
        to_port: 3306
        cidr_ip: "{{ cidr }}.0.11/32"
    tags:
      Name: "mysql1_inbound"
      Organization: b_aws
      Environment: aws
