---
#####
# Initial AWS deployment
#####
- hosts: localhost
  connection: local
  gather_facts: yes

  roles:
    # Load variables
    - role: load_variables
      variables:
        - vars/aws_infrastructure.yml
        - vars/bastionhost.yml
        - vars/internal_instances.yml
        - vars/vault.yml
    # Create and configure VPC
    - role: aws.vpc
    # Get VPC and subnet facts
    - role: aws.vpc_facts
      filters:
        "tag:Organization": b_dev
    - role: aws.bastionhost
    - role: aws.routes
    - role: aws.securitygroups
    - role: aws.iam
    - role: aws.ec2
    # Get AWS facts.  Needs a dictionary passed in as aws_fact_vars
    - role: aws.ec2_facts
      filters:
        "tag:Organization": b_dev
    # Get SSH fingerprints and configure .ssh/config
    - role: localhost.ssh_init
    # Configure Ansible groups
    - role: ansible.groups_init


#####
# Initial raw configuration for bastionhost
#####
- hosts: bastionhost_public
  become: yes
  gather_facts: no
  user: ubuntu

  roles:
    - role: ubuntu.raw_install_python

#####
# Configure NAT instance
#####
- hosts: bastionhost_public
  become: yes
  remote_user: ubuntu
  gather_facts: yes

  roles:
    - role: load_variables
      variables:
        - vars/aws_infrastructure.yml
    - role: bastionhost.nat_config

#####
# Initial raw configuration for ALL instances
#####
- hosts: internal_system_private
  become: yes
  remote_user: ubuntu
  gather_facts: no

  roles:
    - role: ubuntu.raw_install_python

#####
# Configure NAT instance
#####
- hosts: internal_system_private
  become: yes
  remote_user: ubuntu
  gather_facts: yes

  roles:
    - role: load_variables
      variables:
        - vars/aws_infrastructure.yml
    - role: instance.install_apache 
