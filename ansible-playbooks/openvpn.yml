---
# openvpn.yml
#
# This playbook deploys an AWS infrastructure and two instances; a openvpn
#
#####
# Initial AWS deployment
#####
- hosts: localhost
  connection: local
  gather_facts: yes

  vars_files:
    - vars/{{ env }}/aws.yml
    - vars/{{ env }}/vault.yml
    - vars/openvpn.yml

  roles:
    - role: aws.vpc
    - role: aws.vpc_facts
      filters:
        "tag:Organization": "{{ env }}"
    - role: aws.routes
    - role: aws.securitygroups
    - role: aws.iam
    - role: aws.ec2
    - role: aws.ec2_facts
      filters:
        "tag:Organization": "{{ env }}"
    - role: localhost.aws_ssh_keys
    - role: ansible.groups_init

#####
# Initial raw configuration
#####
- hosts: openvpn1_public
  become: yes
  gather_facts: no
  user: ubuntu

  roles:
    - role: ubuntu.raw_install_python

#####
# Configure shared services on openvpn and MySQL
#####
- hosts: openvpn_public
  remote_user: ubuntu
  gather_facts: yes

  vars_files:
    - "vars/{{ env }}_aws/aws.yml"

  roles:
    - role: instance.ssh_aws_public_key
    - role: instance.docker_install
    - role: instance.automated_updates
      update_date: 'Tue, 07:00'
      reboot: true
    - role: instance.hosts

# #####
# # Initial raw configuration for ALL instances
# #####
# - hosts: internal_system_private
#   become: yes
#   remote_user: ubuntu
#   gather_facts: no
#
#   roles:
#     - role: ubuntu.raw_install_python
#
# #####
# # Configure NAT instance
# #####
# - hosts: internal_system_private
#   become: yes
#   remote_user: ubuntu
#   gather_facts: yes
#
#   vars_files:
#     - vars/aws_infrastructure.yml
#
#   roles:
#     - role: instance.ssh_aws_public_key
#     - role: instance.apache_install
