---
#####
# Initial AWS deployment
#####
- hosts: localhost
  connection: local
  gather_facts: yes


  pre_tasks:
    - name: Verify environment.
      fail:
        msg: "Environment not defined.  Exiting."
      when: ENV is not defined

    - name: Set fact for YAML formatted ENV variable.
      set_fact:
        ENV_yaml: "{{ ENV.replace('.','_') }}"

  roles:
    - role: aws.vpc
      aws_vpc_vars: "{{ hostvars['127.0.0.1']['aws_vpc'] }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    # Create NAT instance
    - role: aws.subnet_facts
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    # Create IAM roles and policies
    - role: aws.iam
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    - role: aws.instance_nat
      nat_vars: "{{ hostvars['127.0.0.1']['nat'] }}"
      subnet_facts_vars: "{{ subnet_facts }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    - role: aws.routes
      aws_vpc_vars: "{{ hostvars['127.0.0.1']['aws_vpc'] }}"
      nat_id_facts_vars: "{{ nat_instance_facts.tagged_instances.0.id }}"
      nat_vars: "{{ hostvars['127.0.0.1']['nat'] }}"
      subnet_facts_vars: "{{ subnet_facts }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    # Create security groups
    - role: aws.securitygroups
      nat_ip_facts_vars: "{{ nat_instance_facts.tagged_instances.0.private_ip }}"
      nat_vars: "{{ hostvars['127.0.0.1']['nat'] }}"
      securitygroups_vars: "{{ hostvars['127.0.0.1']['securitygroups'] }}"
      subnet_facts_vars: "{{ subnet_facts }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    - role: aws.instances
      instance_vars: "{{ hostvars['127.0.0.1'][ENV_yaml + '_instances'] }}"
      subnet_facts_vars: "{{ subnet_facts }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    # Get AWS facts.  Needs a dictionary passed in as aws_fact_vars
    - role: aws.facts
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    # Configure private DNS
    - role: aws.route53
      ec2_facts_vars: "{{ hostvars['127.0.0.1']['ec2_facts']}}"
      nat_vars: "{{ hostvars['127.0.0.1']['nat'] }}"
      subnet_facts_vars: "{{ subnet_facts }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    # Configure localhost SSH config
    - role: localhost.ssh_init
      ec2_facts_vars: "{{ hostvars['127.0.0.1']['ec2_facts'] }}"
      nat_public_dns_facts_vars: "{{ nat_instance_facts.tagged_instances.0.public_dns_name }}"
      nat_public_ip_facts_vars: "{{ nat_instance_facts.tagged_instances.0.public_ip }}"
      nat_vars: "{{ hostvars['127.0.0.1']['nat'] }}"
      ssh_knownhosts_vars: "{{ hostvars['127.0.0.1']['ssh_knownhosts'] }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    # Configure Ansible groups
    - role: ansible.groups_init
      ec2_facts_vars: "{{ hostvars['127.0.0.1']['ec2_facts']}}"
      nat_vars: "{{ hostvars['127.0.0.1']['nat'] }}"

#####
# Configure NAT instance
#####
- hosts: nat_public
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    - role: nat.config
      nat_vars: "{{ hostvars['127.0.0.1']['nat'] }}"
      nat_CIDR_fact_vars: "{{ hostvars['127.0.0.1']['nat_CIDR_fact'] }}"
    - role: nat.ssh_gather

#####
# Import SSH fingerprints
#####
- hosts: localhost
  connection: local
  gather_facts: yes

  roles:
    - role: localhost.ssh_knownhosts
      ssh_fingerprint_fact_vars: "{{ hostvars[groups['nat_public'][0]]['ssh_fingerprint_collection_facts']['results']}}"

#####
# Configure instances
#####
- hosts: instances
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    - role: instances.config

#####
# Configure Rancher
#####
- hosts: rancher
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    - role: rancher.startserver
    - role: rancher.configure_rancher
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"

#####
# Configure Rancher Hosts
#####
- hosts: rancherhost
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    - role: rancher.starthost
      rancher_private_ip_fact_vars: "{{ hostvars['127.0.0.1']['ec2_facts']['instances']|selectattr('state', 'equalto', 'running')|selectattr('tags.Role', 'equalto', 'rancher')|map(attribute='private_ip_address')|list|first }}"
      registration_token_fact_vars: "{{ hostvars[groups['rancher'][0]]['registration_token_fact'] }}"

#####
# Configure Rancher continued
#####
- hosts: rancher
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    - role: rancher.waitforhosts
    - role: rancher.convoy
      rancher_vars: "{{ hostvars['127.0.0.1'][hostvars['127.0.0.1']['ENV_yaml'] + '_rancher'] }}"

#####
# Configure first Rancher Host for the volume-builder
#####
- hosts: rancherhost[0]
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    - role: rancher.volume-builder
      ENV_yaml: "{{ hostvars['127.0.0.1']['ENV_yaml'] }}"
      rancher_vars: "{{ hostvars['127.0.0.1'][hostvars['127.0.0.1']['ENV_yaml'] + '_rancher'] }}"

#####
# Deploy stacks
#####
- hosts: rancher
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    - role: rancher.docker-elk
      rancher_vars: "{{ hostvars['127.0.0.1'][hostvars['127.0.0.1']['ENV_yaml'] + '_rancher'] }}"
    - role: rancher.route53
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    # - role: rancher.ecr
    #   vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"

#####
# Configure elasticsearch host
#####
- hosts: localhost
  connection: local
  gather_facts: yes

  roles:
    # Find elasticsearch IP address
    - role: aws.elasticsearch_find
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
    - role: ansible.groups.elasticsearch

#####
# Configure elasticsearch
#####
- hosts: elasticsearch
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    # Configure elasticsearch
    - role: elasticsearch.config
      elasticsearch_vars: "{{ hostvars['127.0.0.1'][hostvars['127.0.0.1']['ENV_yaml'] + '_elasticsearch'] }}"

#####
# Configure beats for all instances (AFTER elasticsearch is configured)
#####
- hosts: instances
  become: yes
  remote_user: centos
  gather_facts: yes

  roles:
    - role: instances.beats

#####
# Configure ELB
#####
- hosts: localhost
  connection: local
  gather_facts: yes

  roles:
    - role: aws.elb_rancher
      ec2_facts_vars: "{{ hostvars['127.0.0.1']['ec2_facts']}}"
      elb_rancher_vars: "{{ hostvars['127.0.0.1'][ENV_yaml + '_elb_rancher'] }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
      region_yaml: "{{ hostvars['127.0.0.1']['vault']['region'].replace('-','_') }}"
    - role: aws.elb_rancher_elk
      ec2_facts_vars: "{{ hostvars['127.0.0.1']['ec2_facts']}}"
      elb_rancher_elk_vars: "{{ hostvars['127.0.0.1'][ENV_yaml + '_elb_rancher_elk'] }}"
      vault_vars: "{{ hostvars['127.0.0.1']['vault'] }}"
      region_yaml: "{{ hostvars['127.0.0.1']['vault']['region'].replace('-','_') }}"
